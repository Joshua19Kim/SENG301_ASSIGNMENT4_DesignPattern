@startuml
class BattleRunner {
    - CommandLineInterface cli
    - BattlePrinter battlePrinter
    - Team leftTeam
    - Team rightTeam
    - startBattle()
    - roundBattle(leftTeam: Team, rightTeam: Team): boolean
}

class GamePet {
    - String name
    - int attack
    - int health
    - String emoji
    - SpecialAbility specialAbility
    - takeDamage(damageAmount: int)
    - heal(healAmount: int)
    - buffAttack(buffAmount: int)
    - debuffAttack(debuffAmount: int)
    - getSpecialAbility(): SpecialAbility
}

interface SpecialAbility {
    + useSpecialAbility(self: GamePet, other: GamePet, cli: CommandLineInterface)
}

class BuffSelf {
    + useSpecialAbility(self: GamePet, other: GamePet, cli: CommandLineInterface)
}

class HealSelf {
    + useSpecialAbility(self: GamePet, other: GamePet, cli: CommandLineInterface)
}

class HealBoth {
    + useSpecialAbility(self: GamePet, other: GamePet, cli: CommandLineInterface)
}

class DebuffEnemy {
    + useSpecialAbility(self: GamePet, other: GamePet, cli: CommandLineInterface)
}

BattleRunner --> GamePet
GamePet *--> SpecialAbility
SpecialAbility <|.. BuffSelf
SpecialAbility <|.. HealSelf
SpecialAbility <|.. HealBoth
SpecialAbility <|.. DebuffEnemy
BattleRunner -.-> BuffSelf
BattleRunner -.-> HealSelf
BattleRunner -.-> HealBoth
BattleRunner -.-> DebuffEnemy



note right of BattleRunner : Client
note right of GamePet : Context
note right of SpecialAbility : Strategy
note right of BuffSelf : ConcreteStrategyA
note right of HealSelf : ConcreteStrategyB
note right of HealBoth : ConcreteStrategyC
note right of DebuffEnemy : ConcreteStrategyD
@enduml
